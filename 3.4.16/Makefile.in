.PHONY: dist clean
basedir = @basedir@
sysdir = @sysdir@
bindir = $(basedir)bin/
icondir = $(basedir)share/icons/
dlldir = $(sysdir)bin/
modir = $(sysdir)share/locale/

objs = fractal.o image.o text.o graphic.o draw.o simulator.o main.o @icon@
src = fractal.h image.h text.h graphic.h draw.h simulator.h fractal.c image.c \
	text.c graphic.c draw.c simulator.c main.c
configs = config.h Makefile
tests = tests/tree.xml tests/forest.xml tests/neuron.xml tests/tree-3d.xml \
	tests/forest-3d.xml tests/neuron-3d.xml
dll = $(dlldir)libatk-1.0-0.dll $(dlldir)libbz2-1.dll $(dlldir)libcairo-2.dll \
	$(dlldir)libcairo-gobject-2.dll $(dlldir)libexpat-1.dll \
	$(dlldir)libffi-6.dll $(dlldir)libfontconfig-1.dll \
	$(dlldir)libfreeglut.dll $(dlldir)libfreetype-6.dll $(dlldir)@libgcc@.dll \
	$(dlldir)libgdk_pixbuf-2.0-0.dll $(dlldir)libgdk-3-0.dll \
	$(dlldir)libgio-2.0-0.dll $(dlldir)libglib-2.0-0.dll \
	$(dlldir)libgmodule-2.0-0.dll $(dlldir)libgobject-2.0-0.dll \
	$(dlldir)libgsl-0.dll $(dlldir)libgslcblas-0.dll \
	$(dlldir)libgthread-2.0-0.dll $(dlldir)libgtk-3-0.dll \
	$(dlldir)libharfbuzz-0.dll $(dlldir)libiconv-2.dll $(dlldir)libintl-8.dll \
	$(dlldir)libpango-1.0-0.dll $(dlldir)libpangocairo-1.0-0.dll \
	$(dlldir)libpangoft2-1.0-0.dll $(dlldir)libpangowin32-1.0-0.dll \
	$(dlldir)libpixman-1-0.dll $(dlldir)libpng16-16.dll \
	$(dlldir)libwinpthread-1.dll $(dlldir)zlib1.dll
png = logo.png logo2.png
pgoobjs = fractal.pgo image.pgo text.pgo graphic.pgo draw.pgo simulator.o \
	main.o @icon@
ifeq (@PGO@, 1)
	fractaldep = fractalpgo
	imagedep = fractalpgo
	textdep = fractalpgo
	graphicdep = fractalpgo
	drawdep = fractalpgo
ifeq (@CC@, clang)
	pgogen = -fprofile-instr-generate
	pgouse = -fprofile-instr-use=fractal.profraw
	treeprefix = LLVM_PROFILE_FILE="tree.profdata"
	forestprefix = LLVM_PROFILE_FILE="forest.profdata"
	neuronprefix = LLVM_PROFILE_FILE="neuron.profdata"
	tree3dprefix = LLVM_PROFILE_FILE="tree-3d.profdata"
	forest3dprefix = LLVM_PROFILE_FILE="forest-3d.profdata"
	neuron3dprefix = LLVM_PROFILE_FILE="neuron-3d.profdata"
	llvm_merge = @LLVM_PROFDATA@ merge *.profdata -output fractal.profraw
else
	pgogen = -fprofile-generate
	pgouse = -fprofile-use -fprofile-correction
endif
	exedep = $(objs) $(fractaldep)
else
	fractaldep = fractal.c fractal.h simulator.h draw.h $(configs)
	imagedep = image.c image.h $(configs)
	textdep = text.c image.h text.h $(configs)
	graphicdep = graphic.c fractal.h image.h text.h graphic.h $(configs)
	drawdep = draw.c fractal.h image.h text.h graphic.h draw.h simulator.h \
		$(configs)
	exedep = $(objs)
endif
es = po/es/LC_MESSAGES/
fr = po/fr/LC_MESSAGES/
pot = po/fractal.pot
locales = $(es)fractal.mo $(fr)fractal.mo

CFLAGS = @SINCOS@ @SINCOSF@ @FONT@ @CFLAGS@ @GSL_CFLAGS@ @XML_CFLAGS@ \
	@GTHREAD_CFLAGS@ @GLIB_CFLAGS@ @GTOP_CFLAGS@ @PNG_CFLAGS@ @FREETYPE_CFLAGS@ \
	@GLEW_CFLAGS@ @GLUT_CFLAGS@ @SDL_CFLAGS@ @GLFW_CFLAGS@ @GTK_CFLAGS@ \
	@GRAPHIC@ @NCORES@ @SYSINFO@ @GTK4@ -c -Wall -Wextra -O3 -D_FORTIFY_SOURCE=2
LDFLAGS = @LDFLAGS@ @LIBS@ @GSL_LIBS@ @XML_LIBS@ @GTHREAD_LIBS@ @GLIB_LIBS@ \
	@GTOP_LIBS@ @PNG_LIBS@ @FREETYPE_LIBS@ @GLEW_LIBS@ @GLUT_LIBS@ @SDL_LIBS@ \
	@GLFW_LIBS@ @GTK_LIBS@

CC = @CC@ @ARCH@ @STD@ @LTO@ @ccflags@ #-pg

all: fractal@EXE@ $(locales)

fractal@EXE@: $(exedep)
	$(CC) $(pgouse) $(objs) $(LDFLAGS) -o fractal@EXE@

fractalpgo: $(pgoobjs) $(tests)
	$(CC) $(pgogen) $(pgoobjs) $(LDFLAGS) -o fractalpgo
	$(treeprefix) ./fractalpgo tests/tree.xml
	$(forestprefix) ./fractalpgo tests/forest.xml
	$(neuronprefix) ./fractalpgo tests/neuron.xml
	$(tree3dprefix) ./fractalpgo tests/tree-3d.xml
	$(forest3dprefix) ./fractalpgo tests/forest-3d.xml
	$(neuron3dprefix) ./fractalpgo tests/neuron-3d.xml
	$(llvm_merge)

fractal.pgo: fractal.c fractal.h simulator.h image.h text.h graphic.h draw.h \
	$(configs)
	$(CC) $(CFLAGS) $(pgogen) fractal.c -o fractal.pgo

fractal.o: $(fractaldep)
	$(CC) $(CFLAGS) $(pgouse) fractal.c -o fractal.o

image.pgo: image.c image.h $(configs)
	$(CC) $(CFLAGS) $(pgogen) image.c -o image.pgo

image.o: $(imagedep)
	$(CC) $(CFLAGS) $(pgouse) image.c -o image.o

text.pgo: text.c image.h text.h $(configs)
	$(CC) $(CFLAGS) $(pgogen) text.c -o text.pgo

text.o: $(textdep)
	$(CC) $(CFLAGS) $(pgouse) text.c -o text.o

graphic.pgo: graphic.c fractal.h image.h text.h graphic.h $(configs)
	$(CC) $(CFLAGS) $(pgogen) graphic.c -o graphic.pgo

graphic.o: $(graphicdep)
	$(CC) $(CFLAGS) $(pgouse) graphic.c -o graphic.o

draw.pgo: draw.c fractal.h image.h text.h graphic.h draw.h simulator.h \
	$(configs)
	$(CC) $(CFLAGS) $(pgogen) draw.c -o draw.pgo

draw.o: $(drawdep)
	$(CC) $(CFLAGS) $(pgouse) draw.c -o draw.o

simulator.o: simulator.c fractal.h image.h text.h graphic.h draw.h simulator.h \
	$(configs)
	$(CC) $(CFLAGS) simulator.c -o simulator.o

main.o: main.c fractal.h image.h text.h graphic.h draw.h simulator.h $(configs)
	$(CC) $(CFLAGS) main.c -o main.o

@icon@: fractal.rc fractal.ico
	@WINDRES@ fractal.rc -o @icon@

lang = es fr
$(pot): Makefile $(src)
	if ! test -d po; then mkdir po; fi
	@gnu@xgettext -k_ -d fractal -o $(pot) --from-code=UTF-8 $(src)
	$(foreach i,$(lang), \
		if ! test -d $($i); then mkdir -p $($i); fi; \
		if ! test -f $($i)fractal.po; then \
			msginit -l $i -i $(pot) -o $($i)fractal.po --no-translator; \
		else \
			msgmerge -U $($i)fractal.po $(pot); \
		fi; \
		vim -p $($i)fractal.po;)

$(es)fractal.mo: $(es)fractal.po $(pot)
	@gnu@msgfmt -c -v -o $(es)fractal.mo $(es)fractal.po

$(fr)fractal.mo: $(fr)fractal.po $(pot)
	@gnu@msgfmt -c -v -o $(fr)fractal.mo $(fr)fractal.po

## Making Microsoft Windows distribution
dist: $(name) $(dll)
	test -d $(bindir) || mkdir -p $(bindir)
	test -d $(icondir) || mkdir -p $(icondir)
	cp fractal.exe $(dll) $(png) $(bindir)
	strip $(bindir)*.exe $(bindir)*.dll
	cp -r $(sysdir)share/icons/Adwaita $(icondir)
	test -d $(bindir)po/$(es) || mkdir -p $(bindir)po/$(es)
	cp $(modir)$(es)atk10.mo $(modir)$(es)gdk-pixbuf.mo \
		$(modir)$(es)gettext-runtime.mo $(modir)$(es)glib20.mo \
		$(modir)$(es)gtk30.mo $(modir)$(es)gtk30-properties.mo \
		$(modir)$(es)libiconv.mo po/$(es)fractal.mo $(bindir)po/$(es)
	test -d $(bindir)po/$(fr) || mkdir -p $(bindir)po/$(fr)
	cp $(modir)$(fr)atk10.mo $(modir)$(fr)gdk-pixbuf.mo \
		$(modir)$(fr)gettext-runtime.mo $(modir)$(fr)glib20.mo \
		$(modir)$(fr)gtk30.mo $(modir)$(fr)gtk30-properties.mo \
		$(modir)$(fr)libiconv.mo po/$(fr)fractal.mo $(bindir)po/$(fr)

strip: fractal@EXE@ $(pot) $(es)fractal.mo $(fr)fractal.mo
	strip fractal@EXE@

clean:
	rm -rf *.m4 *.cache *.scan *.log config.status Makefile *.o *.pgo \
		fractal po/*/*/*.mo
